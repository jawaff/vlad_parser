# Generated from ./grammar/VLADLexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,35,478,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,
        84,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,
        4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,
        8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,
        1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,
        1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,
        1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,
        1,32,5,32,258,8,32,10,32,12,32,261,9,32,1,33,4,33,264,8,33,11,33,
        12,33,265,1,33,1,33,1,34,1,34,1,34,1,34,1,35,1,35,3,35,276,8,35,
        1,36,1,36,1,37,1,37,1,38,1,38,1,38,1,38,5,38,286,8,38,10,38,12,38,
        289,9,38,1,38,1,38,1,38,3,38,294,8,38,1,39,1,39,1,39,1,39,1,39,5,
        39,301,8,39,10,39,12,39,304,9,39,1,39,1,39,1,39,3,39,309,8,39,1,
        40,1,40,1,40,1,40,5,40,315,8,40,10,40,12,40,318,9,40,1,41,1,41,1,
        41,1,41,1,41,3,41,325,8,41,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,
        43,3,43,335,8,43,3,43,337,8,43,3,43,339,8,43,3,43,341,8,43,1,44,
        1,44,1,44,5,44,346,8,44,10,44,12,44,349,9,44,3,44,351,8,44,1,45,
        1,45,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,3,47,
        366,8,47,1,48,1,48,1,48,3,48,371,8,48,1,48,1,48,1,49,1,49,1,49,5,
        49,378,8,49,10,49,12,49,381,9,49,1,49,1,49,1,50,1,50,1,50,5,50,388,
        8,50,10,50,12,50,391,9,50,1,50,1,50,1,51,1,51,1,51,5,51,398,8,51,
        10,51,12,51,401,9,51,1,52,1,52,1,52,1,52,3,52,407,8,52,1,53,1,53,
        1,54,1,54,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,57,1,58,1,58,
        1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,
        1,65,1,66,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,
        1,71,1,72,1,72,1,73,1,73,1,73,1,74,1,74,1,75,1,75,1,76,1,76,1,77,
        1,77,1,78,1,78,1,79,1,79,1,80,1,80,1,80,1,81,1,81,1,82,1,82,1,83,
        1,83,1,84,1,84,2,287,302,0,85,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
        17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
        39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,
        61,31,63,32,65,33,67,34,69,35,71,0,73,0,75,0,77,0,79,0,81,0,83,0,
        85,0,87,0,89,0,91,0,93,0,95,0,97,0,99,0,101,0,103,0,105,0,107,0,
        109,0,111,0,113,0,115,0,117,0,119,0,121,0,123,0,125,0,127,0,129,
        0,131,0,133,0,135,0,137,0,139,0,141,0,143,0,145,0,147,0,149,0,151,
        0,153,0,155,0,157,0,159,0,161,0,163,0,165,0,167,0,169,0,1,0,12,3,
        0,9,10,12,13,32,32,2,0,9,9,32,32,2,0,10,10,12,13,2,0,10,10,13,13,
        8,0,34,34,39,39,92,92,98,98,102,102,110,110,114,114,116,116,1,0,
        49,57,3,0,48,57,65,70,97,102,1,0,48,57,4,0,10,10,13,13,39,39,92,
        92,4,0,10,10,13,13,34,34,92,92,3,0,183,183,768,879,8255,8256,13,
        0,65,90,97,122,192,214,216,246,248,767,880,893,895,8191,8204,8205,
        8304,8591,11264,12271,12289,55295,63744,64975,65008,65533,455,0,
        1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,
        0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
        0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,
        0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,
        0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,
        0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,
        0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,1,171,
        1,0,0,0,3,175,1,0,0,0,5,179,1,0,0,0,7,183,1,0,0,0,9,185,1,0,0,0,
        11,188,1,0,0,0,13,190,1,0,0,0,15,192,1,0,0,0,17,201,1,0,0,0,19,209,
        1,0,0,0,21,211,1,0,0,0,23,213,1,0,0,0,25,215,1,0,0,0,27,217,1,0,
        0,0,29,219,1,0,0,0,31,221,1,0,0,0,33,223,1,0,0,0,35,225,1,0,0,0,
        37,227,1,0,0,0,39,229,1,0,0,0,41,231,1,0,0,0,43,233,1,0,0,0,45,235,
        1,0,0,0,47,237,1,0,0,0,49,239,1,0,0,0,51,241,1,0,0,0,53,243,1,0,
        0,0,55,245,1,0,0,0,57,247,1,0,0,0,59,249,1,0,0,0,61,251,1,0,0,0,
        63,253,1,0,0,0,65,255,1,0,0,0,67,263,1,0,0,0,69,269,1,0,0,0,71,275,
        1,0,0,0,73,277,1,0,0,0,75,279,1,0,0,0,77,281,1,0,0,0,79,295,1,0,
        0,0,81,310,1,0,0,0,83,319,1,0,0,0,85,326,1,0,0,0,87,329,1,0,0,0,
        89,350,1,0,0,0,91,352,1,0,0,0,93,354,1,0,0,0,95,365,1,0,0,0,97,367,
        1,0,0,0,99,374,1,0,0,0,101,384,1,0,0,0,103,394,1,0,0,0,105,406,1,
        0,0,0,107,408,1,0,0,0,109,410,1,0,0,0,111,414,1,0,0,0,113,416,1,
        0,0,0,115,418,1,0,0,0,117,421,1,0,0,0,119,423,1,0,0,0,121,425,1,
        0,0,0,123,427,1,0,0,0,125,429,1,0,0,0,127,431,1,0,0,0,129,433,1,
        0,0,0,131,435,1,0,0,0,133,437,1,0,0,0,135,440,1,0,0,0,137,442,1,
        0,0,0,139,444,1,0,0,0,141,446,1,0,0,0,143,448,1,0,0,0,145,450,1,
        0,0,0,147,452,1,0,0,0,149,455,1,0,0,0,151,457,1,0,0,0,153,459,1,
        0,0,0,155,461,1,0,0,0,157,463,1,0,0,0,159,465,1,0,0,0,161,467,1,
        0,0,0,163,470,1,0,0,0,165,472,1,0,0,0,167,474,1,0,0,0,169,476,1,
        0,0,0,171,172,3,79,39,0,172,173,1,0,0,0,173,174,6,0,0,0,174,2,1,
        0,0,0,175,176,3,77,38,0,176,177,1,0,0,0,177,178,6,1,0,0,178,4,1,
        0,0,0,179,180,3,81,40,0,180,181,1,0,0,0,181,182,6,2,0,0,182,6,1,
        0,0,0,183,184,3,89,44,0,184,8,1,0,0,0,185,186,3,169,84,0,186,187,
        3,99,49,0,187,10,1,0,0,0,188,189,3,99,49,0,189,12,1,0,0,0,190,191,
        3,103,51,0,191,14,1,0,0,0,192,193,5,102,0,0,193,194,5,114,0,0,194,
        195,5,97,0,0,195,196,5,103,0,0,196,197,5,109,0,0,197,198,5,101,0,
        0,198,199,5,110,0,0,199,200,5,116,0,0,200,16,1,0,0,0,201,202,5,115,
        0,0,202,203,5,112,0,0,203,204,5,101,0,0,204,205,5,99,0,0,205,206,
        5,105,0,0,206,207,5,97,0,0,207,208,5,108,0,0,208,18,1,0,0,0,209,
        210,3,113,56,0,210,20,1,0,0,0,211,212,3,115,57,0,212,22,1,0,0,0,
        213,214,3,155,77,0,214,24,1,0,0,0,215,216,3,157,78,0,216,26,1,0,
        0,0,217,218,3,121,60,0,218,28,1,0,0,0,219,220,3,123,61,0,220,30,
        1,0,0,0,221,222,3,125,62,0,222,32,1,0,0,0,223,224,3,127,63,0,224,
        34,1,0,0,0,225,226,3,133,66,0,226,36,1,0,0,0,227,228,3,135,67,0,
        228,38,1,0,0,0,229,230,3,137,68,0,230,40,1,0,0,0,231,232,3,139,69,
        0,232,42,1,0,0,0,233,234,3,141,70,0,234,44,1,0,0,0,235,236,3,143,
        71,0,236,46,1,0,0,0,237,238,3,147,73,0,238,48,1,0,0,0,239,240,3,
        145,72,0,240,50,1,0,0,0,241,242,3,151,75,0,242,52,1,0,0,0,243,244,
        3,153,76,0,244,54,1,0,0,0,245,246,3,161,80,0,246,56,1,0,0,0,247,
        248,3,159,79,0,248,58,1,0,0,0,249,250,3,163,81,0,250,60,1,0,0,0,
        251,252,3,165,82,0,252,62,1,0,0,0,253,254,3,167,83,0,254,64,1,0,
        0,0,255,259,3,107,53,0,256,258,3,105,52,0,257,256,1,0,0,0,258,261,
        1,0,0,0,259,257,1,0,0,0,259,260,1,0,0,0,260,66,1,0,0,0,261,259,1,
        0,0,0,262,264,7,0,0,0,263,262,1,0,0,0,264,265,1,0,0,0,265,263,1,
        0,0,0,265,266,1,0,0,0,266,267,1,0,0,0,267,268,6,33,1,0,268,68,1,
        0,0,0,269,270,9,0,0,0,270,271,1,0,0,0,271,272,6,34,2,0,272,70,1,
        0,0,0,273,276,3,73,36,0,274,276,3,75,37,0,275,273,1,0,0,0,275,274,
        1,0,0,0,276,72,1,0,0,0,277,278,7,1,0,0,278,74,1,0,0,0,279,280,7,
        2,0,0,280,76,1,0,0,0,281,282,5,47,0,0,282,283,5,42,0,0,283,287,1,
        0,0,0,284,286,9,0,0,0,285,284,1,0,0,0,286,289,1,0,0,0,287,288,1,
        0,0,0,287,285,1,0,0,0,288,293,1,0,0,0,289,287,1,0,0,0,290,291,5,
        42,0,0,291,294,5,47,0,0,292,294,5,0,0,1,293,290,1,0,0,0,293,292,
        1,0,0,0,294,78,1,0,0,0,295,296,5,47,0,0,296,297,5,42,0,0,297,298,
        5,42,0,0,298,302,1,0,0,0,299,301,9,0,0,0,300,299,1,0,0,0,301,304,
        1,0,0,0,302,303,1,0,0,0,302,300,1,0,0,0,303,308,1,0,0,0,304,302,
        1,0,0,0,305,306,5,42,0,0,306,309,5,47,0,0,307,309,5,0,0,1,308,305,
        1,0,0,0,308,307,1,0,0,0,309,80,1,0,0,0,310,311,5,47,0,0,311,312,
        5,47,0,0,312,316,1,0,0,0,313,315,8,3,0,0,314,313,1,0,0,0,315,318,
        1,0,0,0,316,314,1,0,0,0,316,317,1,0,0,0,317,82,1,0,0,0,318,316,1,
        0,0,0,319,324,3,111,55,0,320,325,7,4,0,0,321,325,3,87,43,0,322,325,
        9,0,0,0,323,325,5,0,0,1,324,320,1,0,0,0,324,321,1,0,0,0,324,322,
        1,0,0,0,324,323,1,0,0,0,325,84,1,0,0,0,326,327,3,111,55,0,327,328,
        9,0,0,0,328,86,1,0,0,0,329,340,5,117,0,0,330,338,3,91,45,0,331,336,
        3,91,45,0,332,334,3,91,45,0,333,335,3,91,45,0,334,333,1,0,0,0,334,
        335,1,0,0,0,335,337,1,0,0,0,336,332,1,0,0,0,336,337,1,0,0,0,337,
        339,1,0,0,0,338,331,1,0,0,0,338,339,1,0,0,0,339,341,1,0,0,0,340,
        330,1,0,0,0,340,341,1,0,0,0,341,88,1,0,0,0,342,351,5,48,0,0,343,
        347,7,5,0,0,344,346,3,93,46,0,345,344,1,0,0,0,346,349,1,0,0,0,347,
        345,1,0,0,0,347,348,1,0,0,0,348,351,1,0,0,0,349,347,1,0,0,0,350,
        342,1,0,0,0,350,343,1,0,0,0,351,90,1,0,0,0,352,353,7,6,0,0,353,92,
        1,0,0,0,354,355,7,7,0,0,355,94,1,0,0,0,356,357,5,116,0,0,357,358,
        5,114,0,0,358,359,5,117,0,0,359,366,5,101,0,0,360,361,5,102,0,0,
        361,362,5,97,0,0,362,363,5,108,0,0,363,364,5,115,0,0,364,366,5,101,
        0,0,365,356,1,0,0,0,365,360,1,0,0,0,366,96,1,0,0,0,367,370,3,117,
        58,0,368,371,3,83,41,0,369,371,8,8,0,0,370,368,1,0,0,0,370,369,1,
        0,0,0,371,372,1,0,0,0,372,373,3,117,58,0,373,98,1,0,0,0,374,379,
        3,117,58,0,375,378,3,83,41,0,376,378,8,8,0,0,377,375,1,0,0,0,377,
        376,1,0,0,0,378,381,1,0,0,0,379,377,1,0,0,0,379,380,1,0,0,0,380,
        382,1,0,0,0,381,379,1,0,0,0,382,383,3,117,58,0,383,100,1,0,0,0,384,
        389,3,119,59,0,385,388,3,83,41,0,386,388,8,9,0,0,387,385,1,0,0,0,
        387,386,1,0,0,0,388,391,1,0,0,0,389,387,1,0,0,0,389,390,1,0,0,0,
        390,392,1,0,0,0,391,389,1,0,0,0,392,393,3,119,59,0,393,102,1,0,0,
        0,394,399,3,117,58,0,395,398,3,83,41,0,396,398,8,8,0,0,397,395,1,
        0,0,0,397,396,1,0,0,0,398,401,1,0,0,0,399,397,1,0,0,0,399,400,1,
        0,0,0,400,104,1,0,0,0,401,399,1,0,0,0,402,407,3,107,53,0,403,407,
        2,48,57,0,404,407,3,149,74,0,405,407,7,10,0,0,406,402,1,0,0,0,406,
        403,1,0,0,0,406,404,1,0,0,0,406,405,1,0,0,0,407,106,1,0,0,0,408,
        409,7,11,0,0,409,108,1,0,0,0,410,411,5,105,0,0,411,412,5,110,0,0,
        412,413,5,116,0,0,413,110,1,0,0,0,414,415,5,92,0,0,415,112,1,0,0,
        0,416,417,5,58,0,0,417,114,1,0,0,0,418,419,5,58,0,0,419,420,5,58,
        0,0,420,116,1,0,0,0,421,422,5,39,0,0,422,118,1,0,0,0,423,424,5,34,
        0,0,424,120,1,0,0,0,425,426,5,40,0,0,426,122,1,0,0,0,427,428,5,41,
        0,0,428,124,1,0,0,0,429,430,5,123,0,0,430,126,1,0,0,0,431,432,5,
        125,0,0,432,128,1,0,0,0,433,434,5,91,0,0,434,130,1,0,0,0,435,436,
        5,93,0,0,436,132,1,0,0,0,437,438,5,45,0,0,438,439,5,62,0,0,439,134,
        1,0,0,0,440,441,5,60,0,0,441,136,1,0,0,0,442,443,5,62,0,0,443,138,
        1,0,0,0,444,445,5,61,0,0,445,140,1,0,0,0,446,447,5,63,0,0,447,142,
        1,0,0,0,448,449,5,42,0,0,449,144,1,0,0,0,450,451,5,43,0,0,451,146,
        1,0,0,0,452,453,5,43,0,0,453,454,5,61,0,0,454,148,1,0,0,0,455,456,
        5,95,0,0,456,150,1,0,0,0,457,458,5,124,0,0,458,152,1,0,0,0,459,460,
        5,36,0,0,460,154,1,0,0,0,461,462,5,44,0,0,462,156,1,0,0,0,463,464,
        5,59,0,0,464,158,1,0,0,0,465,466,5,46,0,0,466,160,1,0,0,0,467,468,
        5,46,0,0,468,469,5,46,0,0,469,162,1,0,0,0,470,471,5,64,0,0,471,164,
        1,0,0,0,472,473,5,35,0,0,473,166,1,0,0,0,474,475,5,126,0,0,475,168,
        1,0,0,0,476,477,5,114,0,0,477,170,1,0,0,0,25,0,259,265,275,287,293,
        302,308,316,324,334,336,338,340,347,350,365,370,377,379,387,389,
        397,399,406,3,0,2,0,6,0,0,0,1,0
    ]

class VLADLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    COMMENT = 2

    DOC_COMMENT = 1
    BLOCK_COMMENT = 2
    LINE_COMMENT = 3
    INT = 4
    REGEX_LITERAL = 5
    STRING_LITERAL = 6
    UNTERMINATED_STRING_LITERAL = 7
    FRAGMENT = 8
    SPECIAL = 9
    COLON = 10
    COLONCOLON = 11
    COMMA = 12
    SEMI = 13
    LPAREN = 14
    RPAREN = 15
    LBRACE = 16
    RBRACE = 17
    RARROW = 18
    LT = 19
    GT = 20
    ASSIGN = 21
    QUESTION = 22
    STAR = 23
    PLUS_ASSIGN = 24
    PLUS = 25
    OR = 26
    DOLLAR = 27
    RANGE = 28
    DOT = 29
    AT = 30
    POUND = 31
    NOT = 32
    ID = 33
    WS = 34
    ERRCHAR = 35

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN", u"COMMENT" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'fragment'", "'special'" ]

    symbolicNames = [ "<INVALID>",
            "DOC_COMMENT", "BLOCK_COMMENT", "LINE_COMMENT", "INT", "REGEX_LITERAL", 
            "STRING_LITERAL", "UNTERMINATED_STRING_LITERAL", "FRAGMENT", 
            "SPECIAL", "COLON", "COLONCOLON", "COMMA", "SEMI", "LPAREN", 
            "RPAREN", "LBRACE", "RBRACE", "RARROW", "LT", "GT", "ASSIGN", 
            "QUESTION", "STAR", "PLUS_ASSIGN", "PLUS", "OR", "DOLLAR", "RANGE", 
            "DOT", "AT", "POUND", "NOT", "ID", "WS", "ERRCHAR" ]

    ruleNames = [ "DOC_COMMENT", "BLOCK_COMMENT", "LINE_COMMENT", "INT", 
                  "REGEX_LITERAL", "STRING_LITERAL", "UNTERMINATED_STRING_LITERAL", 
                  "FRAGMENT", "SPECIAL", "COLON", "COLONCOLON", "COMMA", 
                  "SEMI", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "RARROW", 
                  "LT", "GT", "ASSIGN", "QUESTION", "STAR", "PLUS_ASSIGN", 
                  "PLUS", "OR", "DOLLAR", "RANGE", "DOT", "AT", "POUND", 
                  "NOT", "ID", "WS", "ERRCHAR", "Ws", "Hws", "Vws", "BlockComment", 
                  "DocComment", "LineComment", "EscSeq", "EscAny", "UnicodeEsc", 
                  "DecimalNumeral", "HexDigit", "DecDigit", "BoolLiteral", 
                  "CharLiteral", "SQuoteLiteral", "DQuoteLiteral", "USQuoteLiteral", 
                  "NameChar", "NameStartChar", "Int", "Esc", "Colon", "DColon", 
                  "SQuote", "DQuote", "LParen", "RParen", "LBrace", "RBrace", 
                  "LBrack", "RBrack", "RArrow", "Lt", "Gt", "Equal", "Question", 
                  "Star", "Plus", "PlusAssign", "Underscore", "Pipe", "Dollar", 
                  "Comma", "Semi", "Dot", "Range", "At", "Pound", "Tilde", 
                  "R" ]

    grammarFileName = "VLADLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


